What happens when you initialize a repository? Why do you need to do it?

Initializng a repository associates a .git directory with the current directory. 
From that point on, git can be used for version control in that directory.

How is the staging area different from the working directory and the repository? What value do you think it offers?

The staging area maps the files that we want to add from the working directory to the repository
on the next commit. Small change.

How can you use the staging area to make sure you have one commit per logical change?

Only add files to the staging area after a logical change has been completed. Then commit the change with an appropriate commit message desribing the change.

What are some situations when branches would be helpful in keeping your history organized? How would branches help?

When multiple versions of a project are needed.
When we wish to experiment with new code, without impacting working code.
Create development branch whenever moving on to a different piece of work.
When we need to work on earlier version of code, to address bug for instance.

How do the diagrams help you visualize the branch structure?

Diagrams help us to see how the branches relate to one another, for example whether a commit on one branch is a parent on another.
They can also help us see which commits (when made in a 'headless' state, may become unreachable if they are not associated with their own branch.

